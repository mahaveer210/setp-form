{"version":3,"sources":["components/Step1.js","components/Step2.js","components/Step3.js","App.js","reportWebVitals.js","index.js"],"names":["Step1","props","handleChange","field","event","a","target","value","className","ref","onSubmit","submitForm","id","label","autoComplete","validators","errorMessages","this","fields","contact_no","onChange","bind","first_name","delivery_address","pin_code","style","textAlign","type","Component","Step2","handleError","handleChangeCheckbox","hobbies","indexOf","filter","e","push","length","FormGroup","row","FormControlLabel","control","Checkbox","checked","name","errors","Radio","gender","onClick","Step3","TextareaAutosize","aria-label","rowsMin","about","placeholder","width","App","state","setState","step","valid","console","log","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAKqBA,G,wDAEjB,WAAYC,GACX,IAAD,8BACE,cAAMA,IAIRC,aALA,uCAKe,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sDACX,EAAKJ,MAAMC,aAAaC,EAAOC,EAAME,OAAOC,OADjC,2CALf,0D,qDAUA,IAAD,OACK,OAAQ,sBAAKC,UAAU,YAAf,UACC,oBAAIA,UAAU,kBAAd,2CAEA,cAAC,gBAAD,CAAeA,UAAU,YAAYC,IAAI,OAAOC,SAAU,kBAAM,EAAKT,MAAMU,WAAW,IAAtF,SACK,sBAAKH,UAAU,MAAf,UACA,qBAAKA,UAAU,sBAAf,SACG,qBAAKA,UAAU,aAAf,SAEG,cAAC,gBAAD,CAAeI,GAAG,aACFC,MAAM,gBACNC,aAAa,MACbC,WAAY,CAAC,WAAY,8BACzBC,cAAe,CAAC,4BAA6B,yBAC7CT,MAAOU,KAAKhB,MAAMiB,OAAOC,WACzBC,SAAUH,KAAKf,aAAamB,KAAKJ,KAAM,oBAI5D,qBAAKT,UAAU,sBAAf,SACE,qBAAKA,UAAU,aAAf,SACI,cAAC,gBAAD,CAAeI,GAAG,aACHC,MAAM,OACNC,aAAa,MACbP,MAAOU,KAAKhB,MAAMiB,OAAOI,WACzBF,SAAUH,KAAKf,aAAamB,KAAKJ,KAAM,cACvCF,WAAY,CAAC,WAAY,uCACzBC,cAAe,CAAC,yBAA0B,iDAI/D,qBAAKR,UAAU,sBAAf,SACE,qBAAKA,UAAU,aAAf,SACI,cAAC,gBAAD,CAAeI,GAAG,mBACHC,MAAM,mBACNC,aAAa,MACbP,MAAOU,KAAKhB,MAAMiB,OAAOK,iBACzBH,SAAUH,KAAKf,aAAamB,KAAKJ,KAAM,oBACvCF,WAAY,CAAC,YACbC,cAAe,CAAC,gCAIrC,qBAAKR,UAAU,sBAAf,SACE,qBAAKA,UAAU,aAAf,SACI,cAAC,gBAAD,CAAeI,GAAG,WACHC,MAAM,UACNC,aAAa,MACbP,MAAOU,KAAKhB,MAAMiB,OAAOM,SACzBJ,SAAUH,KAAKf,aAAamB,KAAKJ,KAAM,YACvCF,WAAY,CAAC,WAAY,4BACzBC,cAAe,CAAC,yBAA0B,yBAM/D,qBAAKR,UAAU,sBAAsBiB,MAAO,CAACC,UAAU,UAAvD,SACG,wBAAQC,KAAK,SAASnB,UAAU,6BAAhC,yBAOV,qBAAKA,UAAU,iB,GA9EIoB,c,oCCMdC,E,kDAEjB,WAAY5B,GACX,IAAD,8BACE,cAAMA,IAIRC,aALA,uCAKe,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sDACX,EAAKJ,MAAMC,aAAaC,EAAOC,EAAME,OAAOC,OAC5C,EAAKN,MAAM6B,YAAY,SAAgC,IAAtB1B,EAAME,OAAOC,MAAc,oBAAsB,IAFvE,2CALf,0DAUAwB,qBAVA,uCAUuB,WAAO5B,EAAOC,GAAd,eAAAC,EAAA,uDAEf2B,EAAU,EAAK/B,MAAMiB,OAAOc,SACrBC,QAAQ7B,EAAME,OAAOC,QAAU,EAEtCyB,EAAUA,EAAQE,QAAO,SAAAC,GAAC,OAAIA,IAAM/B,EAAME,OAAOC,SAIjDyB,EAAQI,KAAKhC,EAAME,OAAOC,OAG7B,EAAKN,MAAMC,aAAaC,EAAO6B,GAC/B,EAAK/B,MAAM6B,YAAY,UAA6B,GAAlBE,EAAQK,OAAc,4BAA8B,IAbpE,2CAVvB,0D,qDA4BA,IAAD,OACK,OAAQ,sBAAK7B,UAAU,YAAf,UACC,oBAAIA,UAAU,kBAAd,2CAEA,sBAAMA,UAAU,YAAYC,IAAI,OAAhC,SACK,sBAAKD,UAAU,MAAf,UACA,sBAAKA,UAAU,sBAAf,UACK,qBAAKA,UAAU,QAAf,sBACC,eAAC8B,EAAA,EAAD,CAAWC,KAAG,EAAd,UACI,cAACC,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAUnC,MAAM,UAAUoC,QAAS1B,KAAKhB,MAAMiB,OAAOc,QAAQC,QAAQ,YAAc,EAAkBW,KAAK,UAAUxB,SAAUH,KAAKc,qBAAqBV,KAAKJ,KAAM,aAC5KJ,MAAM,YAGV,cAAC2B,EAAA,EAAD,CACIC,QAAS,cAACC,EAAA,EAAD,CAAWnC,MAAM,QAAQoC,QAAS1B,KAAKhB,MAAMiB,OAAOc,QAAQC,QAAQ,UAAY,EAAmBb,SAAUH,KAAKc,qBAAqBV,KAAKJ,KAAM,aAC3JJ,MAAM,UAGR,cAAC2B,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUnC,MAAM,QAAQoC,QAAS1B,KAAKhB,MAAMiB,OAAOc,QAAQC,QAAQ,UAAY,EAAkBb,SAAUH,KAAKc,qBAAqBV,KAAKJ,KAAM,aACzJJ,MAAM,UAEV,qBAAKL,UAAU,QAAf,SAAwBS,KAAKhB,MAAM4C,OAAOb,aAK9C,qBAAKxB,UAAU,QAAf,qBACA,eAAC8B,EAAA,EAAD,CAAWC,KAAG,EAAd,UACI,cAACC,EAAA,EAAD,CACIC,QAAS,cAACK,EAAA,EAAD,CAAOH,QAAqC,QAA5B1B,KAAKhB,MAAMiB,OAAO6B,OAAiCH,KAAK,SAASrC,MAAM,OAAOa,SAAUH,KAAKf,aAAamB,KAAKJ,KAAM,YAC9IJ,MAAM,SAGV,cAAC2B,EAAA,EAAD,CACIC,QAAS,cAACK,EAAA,EAAD,CAAOH,QAAqC,UAA5B1B,KAAKhB,MAAMiB,OAAO6B,OAAmCH,KAAK,SAASrC,MAAM,SAASa,SAAUH,KAAKf,aAAamB,KAAKJ,KAAM,YAClJJ,MAAM,WAEV,qBAAKL,UAAU,QAAf,SAAwBS,KAAKhB,MAAM4C,OAAOE,eAQnD,qBAAKvC,UAAU,sBAAsBiB,MAAO,CAACC,UAAU,UAAvD,SACG,wBAAQC,KAAK,SAASnB,UAAU,kBAAkBwC,QAAS,kBAAM,EAAK/C,MAAMU,WAAW,IAAvF,yBAOV,qBAAKH,UAAU,iB,GAtFIoB,a,SCHdqB,E,kDAEjB,WAAYhD,GACX,IAAD,8BACE,cAAMA,IAIRC,aALA,uCAKe,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sDACX,EAAKJ,MAAMC,aAAaC,EAAOC,EAAME,OAAOC,OAC5C,EAAKN,MAAM6B,YAAY,QAAS1B,EAAME,OAAOC,MAAM8B,OAAS,EAAI,+CAAiD,IAFtG,2CALf,0D,qDAWA,IAAD,OACK,OAAQ,sBAAK7B,UAAU,YAAf,UACC,oBAAIA,UAAU,kBAAd,2CAEA,sBAAMA,UAAU,YAAYC,IAAI,OAAhC,SACK,sBAAKD,UAAU,MAAf,UACA,sBAAKA,UAAU,sBAAf,UAEK,cAAC0C,EAAA,EAAD,CAAkBC,aAAW,iBAAiBC,QAAS,EAAGhC,SAAUH,KAAKf,aAAamB,KAAKJ,KAAM,SAAUV,MAAOU,KAAKhB,MAAMiB,OAAOmC,MAAOC,YAAY,WAAW7B,MAAO,CAAC8B,MAAM,UAE/K,qBAAK/C,UAAU,QAAf,SAAwBS,KAAKhB,MAAM4C,OAAOQ,WAK/C,qBAAK7C,UAAU,sBAAsBiB,MAAO,CAACC,UAAU,UAAvD,SACG,wBAAQC,KAAK,SAASnB,UAAU,kBAAkBwC,QAAS,kBAAM,EAAK/C,MAAMU,WAAW,IAAvF,2BAOV,qBAAKH,UAAU,iB,GArCIoB,aCFd4B,G,wDAEjB,WAAYvD,GACX,IAAD,8BACE,cAAMA,IAqBRC,aAtBA,uCAsBe,WAAOC,EAAOI,GAAd,eAAAF,EAAA,uDACPa,EAAS,EAAKuC,MAAMvC,QACjBf,GAASI,EAChB,EAAKmD,SAAS,CAACxC,WAHJ,2CAtBf,0DA4BAY,YA5BA,uCA4Bc,WAAO3B,EAAOI,GAAd,eAAAF,EAAA,uDACNwC,EAAS,EAAKY,MAAMZ,QACjB1C,GAASI,EAChB,EAAKmD,SAAS,CAACb,WAHL,2CA5Bd,0DAkCAlC,WAlCA,uCAkCc,WAAOgD,GAAP,iBAAAtD,EAAA,sDAEC,GAARsD,GAEC,EAAKD,SAAS,CAACC,SAGR,GAARA,IAEKC,EAAQ,EAC2B,GAApC,EAAKH,MAAMvC,OAAOc,QAAQK,SAEzBuB,EAAQ,EACR,EAAK9B,YAAY,UAAW,8BAGD,IAA5B,EAAK2B,MAAMvC,OAAO6B,SAEjBa,EAAQ,EACR,EAAK9B,YAAY,SAAU,sBAG5B8B,GAEC,EAAKF,SAAS,CAACC,UAKZ,GAARA,IAEKC,EAAQ,EACT,EAAKH,MAAMvC,OAAOmC,MAAMhB,OAAS,IAEhCuB,EAAQ,EACR,EAAK9B,YAAY,QAAS,iDAE3B8B,GAEC,EAAKF,SAAS,CAACC,UAvCb,2CAlCd,sDAEE,EAAKF,MAAQ,CACXvC,OAAQ,CACNC,WAAa,GACbG,WAAa,GACbC,iBAAmB,GACnBC,SAAU,GACVuB,OAAO,GACPf,QAAQ,GACRqB,MAAM,IAERR,OAAQ,CACJb,QAAQ,GACRe,OAAO,GACPM,MAAM,IAEVM,KAAK,GAjBT,E,qDAkFF,OADIE,QAAQC,IAAI7C,KAAKwC,MAAMvC,QAEzB,sBAAKV,UAAU,MAAf,UAEyB,IAApBS,KAAKwC,MAAME,KACX,cAAC,EAAD,CAAOzD,aAAce,KAAKf,aAAcgB,OAAQD,KAAKwC,MAAMvC,OAAQ2B,OAAQ5B,KAAKwC,MAAMZ,OAAQlC,WAAYM,KAAKN,WAAYmB,YAAab,KAAKa,cAC3I,KAEkB,IAApBb,KAAKwC,MAAME,KACX,cAAC,EAAD,CAAOzD,aAAce,KAAKf,aAAcgB,OAAQD,KAAKwC,MAAMvC,OAAQ2B,OAAQ5B,KAAKwC,MAAMZ,OAAQlC,WAAYM,KAAKN,WAAYmB,YAAab,KAAKa,cAC3I,KAEmB,IAApBb,KAAKwC,MAAME,KACZ,cAAC,EAAD,CAAOzD,aAAce,KAAKf,aAAcgB,OAAQD,KAAKwC,MAAMvC,OAAQ2B,OAAQ5B,KAAKwC,MAAMZ,OAAQlC,WAAYM,KAAKN,WAAYmB,YAAab,KAAKa,cAC3I,KAEkB,IAApBb,KAAKwC,MAAME,KACT,sBAAKnD,UAAU,YAAf,UACA,oBAAIA,UAAU,kBAAd,8BACE,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,sBAAf,0BACkBS,KAAKwC,MAAMvC,OAAOC,cAEnC,sBAAKX,UAAU,sBAAf,oBACWS,KAAKwC,MAAMvC,OAAOI,cAE7B,sBAAKd,UAAU,sBAAf,uBACcS,KAAKwC,MAAMvC,OAAOK,oBAEhC,sBAAKf,UAAU,sBAAf,uBACcS,KAAKwC,MAAMvC,OAAOM,YAEhC,sBAAKhB,UAAU,sBAAf,sBACaS,KAAKwC,MAAMvC,OAAO6B,UAE/B,sBAAKvC,UAAU,sBAAf,uBACcS,KAAKwC,MAAMvC,OAAOc,QAAQ+B,KAAK,QAE7C,sBAAKvD,UAAU,sBAAf,wBACeS,KAAKwC,MAAMvC,OAAOmC,eAIxC,Y,GA/HsBzB,cCMlBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6b41875.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport './step.css';\n\n\nexport default class Step1 extends Component {\n\n    constructor(props)\n    {\n      super(props);\n    }\n\n\n    handleChange = async (field, event) => {\n        this.props.handleChange(field, event.target.value);\n    }\n\n render()  \n   {\n        return (<div className=\"card-body\">\n                 <h5 className=\"title_text mt-4\">Customer Details (Step 1 - 3)</h5>\n\n                 <ValidatorForm className=\"user mt-4\" ref=\"form\" onSubmit={() => this.props.submitForm(2)}>\n                      <div className=\"row\">\n                      <div className=\"col-xl-12 col-lg-12\">\n                         <div className=\"form-group\">\n                         \n                            <TextValidator id=\"contact_no\" \n                                            label=\"Mobile Number\" \n                                            autoComplete=\"off\" \n                                            validators={['required', 'matchRegexp:^[0-9]{10,10}$']} \n                                            errorMessages={['Mobile Number is Required', 'Invalid Mobile Number']}\n                                            value={this.props.fields.contact_no}\n                                            onChange={this.handleChange.bind(this, \"contact_no\")} />\n                         </div>\n                       </div>\n\n                       <div className=\"col-xl-12 col-lg-12\">\n                         <div className=\"form-group\">\n                             <TextValidator id=\"first_name\" \n                                            label=\"Name\"  \n                                            autoComplete=\"off\" \n                                            value={this.props.fields.first_name} \n                                            onChange={this.handleChange.bind(this, \"first_name\")}\n                                            validators={['required', 'matchRegexp:^[a-z, A-Z, 0-9]{2,64}$']} \n                                            errorMessages={['this field is required', 'The name must be at least 2 characters.']} />\n                         </div>\n                       </div> \n\n                       <div className=\"col-xl-12 col-lg-12\">\n                         <div className=\"form-group\">\n                             <TextValidator id=\"delivery_address\" \n                                            label=\"Delivery Address\"  \n                                            autoComplete=\"off\" \n                                            value={this.props.fields.delivery_address} \n                                            onChange={this.handleChange.bind(this, \"delivery_address\")}\n                                            validators={['required']} \n                                            errorMessages={['this field is required']} />\n                         </div>\n                       </div>\n\n                       <div className=\"col-xl-12 col-lg-12\">\n                         <div className=\"form-group\">\n                             <TextValidator id=\"pin_code\" \n                                            label=\"Pincode\"  \n                                            autoComplete=\"off\" \n                                            value={this.props.fields.pin_code} \n                                            onChange={this.handleChange.bind(this, \"pin_code\")}\n                                            validators={['required', 'matchRegexp:^[0-9]{6,6}$']} \n                                            errorMessages={['this field is required', 'Invalid pincode']} />\n                         </div>\n                       </div>\n                       \n\n\n                       <div className=\"col-xl-12 col-lg-12\" style={{textAlign:'center'}}>\n                          <button type=\"submit\" className=\"btn btn-primary submit_btn\">Next</button>\n                       </div>\n\n                     </div>\n\n                     </ValidatorForm>\n               \n                <div className=\"clear\"></div>\n             </div>\n                );\n    }\n}\n","import React, { Component } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Radio from '@material-ui/core/Radio';\nimport './step.css';\n\n\n\n\n\nexport default class Step2 extends Component {\n\n    constructor(props)\n    {\n      super(props);\n    }\n\n\n    handleChange = async (field, event) => {\n        this.props.handleChange(field, event.target.value);\n        this.props.handleError('gender', event.target.value == '' ? 'please select one' : '');\n    }\n\n    handleChangeCheckbox = async (field, event) => {\n        \n        let hobbies = this.props.fields.hobbies;\n        if(hobbies.indexOf(event.target.value) > -1)\n         {\n            hobbies = hobbies.filter(e => e !== event.target.value);\n         }\n         else\n         {\n            hobbies.push(event.target.value);\n         }\n\n         this.props.handleChange(field, hobbies);\n         this.props.handleError('hobbies', hobbies.length == 0 ? 'please select atleast one' : '');\n        \n    }\n\n render()  \n   {\n        return (<div className=\"card-body\">\n                 <h5 className=\"title_text mt-4\">Customer Details (Step 2 - 3)</h5>\n\n                 <form className=\"user mt-4\" ref=\"form\">\n                      <div className=\"row\">\n                      <div className=\"col-xl-12 col-lg-12\">\n                           <div className=\"label\">Hobbies:</div> \n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"Cricket\" checked={this.props.fields.hobbies.indexOf(\"Cricket\") > -1 ? true : false} name=\"hobbies\" onChange={this.handleChangeCheckbox.bind(this, \"hobbies\")} />}\n                                    label=\"Cricket\"\n                                />\n\n                                <FormControlLabel\n                                    control={<Checkbox  value=\"Music\" checked={this.props.fields.hobbies.indexOf(\"Music\") > -1 ? true : false}  onChange={this.handleChangeCheckbox.bind(this, \"hobbies\")} />}\n                                    label=\"Music\"\n                                />\n\n                                  <FormControlLabel\n                                    control={<Checkbox value=\"Books\" checked={this.props.fields.hobbies.indexOf(\"Books\") > -1 ? true : false} onChange={this.handleChangeCheckbox.bind(this, \"hobbies\")} />}\n                                    label=\"Books\"\n                                />\n                                <div className=\"error\">{this.props.errors.hobbies}</div>\n                            </FormGroup>\n\n                             \n\n                            <div className=\"label\">Gender:</div>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={<Radio checked={this.props.fields.gender == 'male' ? true : false} name=\"gender\" value=\"male\" onChange={this.handleChange.bind(this, \"gender\")} />}\n                                    label=\"Male\"\n                                />\n\n                                <FormControlLabel\n                                    control={<Radio checked={this.props.fields.gender == 'female' ? true : false} name=\"gender\" value=\"female\" onChange={this.handleChange.bind(this, \"gender\")} />}\n                                    label=\"Female\"\n                                />\n                                <div className=\"error\">{this.props.errors.gender}</div>\n                            </FormGroup>\n\n                            \n                       </div>\n\n                \n\n                       <div className=\"col-xl-12 col-lg-12\" style={{textAlign:'center'}}>\n                          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.submitForm(3)}>Next</button>\n                       </div>\n\n                     </div>\n\n                     </form>\n               \n                <div className=\"clear\"></div>\n             </div>\n                );\n    }\n}\n","import React, { Component } from 'react';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport './step.css';\n\n\n\n\n\nexport default class Step3 extends Component {\n\n    constructor(props)\n    {\n      super(props);\n    }\n\n\n    handleChange = async (field, event) => {\n        this.props.handleChange(field, event.target.value);\n        this.props.handleError('about', event.target.value.length < 2 ? 'About detail must be at least 2 characters. ' : '');\n    }\n\n render()  \n   {\n        return (<div className=\"card-body\">\n                 <h5 className=\"title_text mt-4\">Customer Details (Step 3 - 3)</h5>\n\n                 <form className=\"user mt-4\" ref=\"form\">\n                      <div className=\"row\">\n                      <div className=\"col-xl-12 col-lg-12\">\n                           \n                           <TextareaAutosize aria-label=\"minimum height\" rowsMin={3} onChange={this.handleChange.bind(this, \"about\")} value={this.props.fields.about} placeholder=\"About me\" style={{width:'100%'}} />\n\n                            <div className=\"error\">{this.props.errors.about}</div>\n                       </div>\n\n                \n\n                       <div className=\"col-xl-12 col-lg-12\" style={{textAlign:'center'}}>\n                          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.submitForm(4)}>Submit</button>\n                       </div>\n\n                     </div>\n\n                     </form>\n               \n                <div className=\"clear\"></div>\n             </div>\n                );\n    }\n}\n","import React, { Component } from 'react';\nimport Step1 from './components/Step1';\nimport Step2 from './components/Step2';\nimport Step3 from './components/Step3';\nimport './App.css';\n\nexport default class App extends Component {\n \n    constructor(props)\n    {\n      super(props);\n      this.state = {\n        fields: {\n          contact_no : \"\",\n          first_name : \"\",\n          delivery_address : \"\",\n          pin_code: \"\",\n          gender:\"\",\n          hobbies:[],\n          about:\"\",\n        },\n        errors: {\n            hobbies:'',\n            gender:'',\n            about:'',\n        },\n        step:1,\n      }\n    }\n\n\n    handleChange = async (field, value) => {\n        let fields = this.state.fields;\n        fields[field] = value; \n        this.setState({fields});\n    }\n\n    handleError = async (field, value) => {\n        let errors = this.state.errors;\n        errors[field] = value; \n        this.setState({errors});\n    }\n\n    submitForm  = async (step) => {\n        \n        if(step == 2)\n        {\n            this.setState({step});\n        }\n\n        if(step == 3)\n        {\n            let valid = 1;\n            if(this.state.fields.hobbies.length == 0)\n            {\n                valid = 0;\n                this.handleError('hobbies', 'please select atleast one');\n            }\n    \n            if(this.state.fields.gender == \"\")\n            {\n                valid = 0;\n                this.handleError('gender', 'please select one');\n            }\n           \n            if(valid)\n            {\n                this.setState({step});  \n            }\n        }\n\n\n        if(step == 4)\n        {\n            let valid = 1;\n            if(this.state.fields.about.length < 2)\n            {\n                valid = 0;\n                this.handleError('about', 'About detail must be at least 2 characters. ');\n            }\n            if(valid)\n            {\n                this.setState({step});  \n            }\n        }\n\n    }\n\n    render()  \n  {\n      console.log(this.state.fields);\n  return (\n    <div className=\"App\">\n\n        {this.state.step === 1 ?\n         <Step1 handleChange={this.handleChange} fields={this.state.fields} errors={this.state.errors} submitForm={this.submitForm} handleError={this.handleError}  />\n         : null}\n\n        {this.state.step === 2 ?\n         <Step2 handleChange={this.handleChange} fields={this.state.fields} errors={this.state.errors} submitForm={this.submitForm} handleError={this.handleError}  />\n         : null}\n\n         {this.state.step === 3 ?\n         <Step3 handleChange={this.handleChange} fields={this.state.fields} errors={this.state.errors} submitForm={this.submitForm} handleError={this.handleError}  />\n         : null}\n\n        {this.state.step === 4 ?\n           <div className=\"card-body\">\n           <h5 className=\"title_text mt-4\">Customer Details</h5>\n             <div className=\"row\">\n                 <div className=\"col-xl-12 col-lg-12\">\n                     Contact No : {this.state.fields.contact_no}\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12\">\n                     Name : {this.state.fields.first_name}\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12\">\n                     Address : {this.state.fields.delivery_address}\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12\">\n                     Pincode : {this.state.fields.pin_code}\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12\">\n                     Gender : {this.state.fields.gender}\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12\">\n                     hobbies : {this.state.fields.hobbies.join(\",\")}\n                  </div>\n                  <div className=\"col-xl-12 col-lg-12\">\n                     About Me : {this.state.fields.about}\n                  </div>\n             </div>\n           </div>\n         : null}\n\n    </div>\n  );\n}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}